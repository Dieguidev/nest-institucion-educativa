// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
}

model User {
  id        String    @id @default(uuid())
  name      String
  last_name String
  password  String
  email     String    @unique
  birthdate DateTime?
  dni       String    @unique
  role      Role      @default(STUDENT)
  gradeId   String?
  isActive  Boolean   @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  grade_grade_tutorIdTouser Grade[] @relation("grade_tutorIdTouser")
  grade_user_gradeIdTograde Grade?  @relation("user_gradeIdTograde", fields: [gradeId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([isActive])
}

model Grade {
  id          String  @id @default(uuid())
  school_year Int
  grade       String
  section     String
  tutorId     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user_grade_tutorIdTouser User?  @relation("grade_tutorIdTouser", fields: [tutorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_user_gradeIdTograde User[] @relation("user_gradeIdTograde")
}
